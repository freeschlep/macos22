name: Extract Apple Developer Credentials

on:
  workflow_dispatch:
    inputs:
      bundle_id:
        description: 'Your App Bundle Identifier (e.g., com.example.myapp)'
        required: true
        default: 'com.yourcompany.yourapp'

jobs:
  extract-credentials:
    runs-on: macos-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Xcode
      run: |
        sudo xcode-select -switch /Applications/Xcode.app/Contents/Developer
        xcodebuild -version
    
    - name: Authenticate with Apple Developer
      env:
        APPLE_ID: ${{ secrets.APPLE_ID }}
        APP_SPECIFIC_PASSWORD: ${{ secrets.APP_SPECIFIC_PASSWORD }}
      run: |
        echo "🔐 Testing Apple Developer authentication..."
        xcrun altool --list-providers -u "$APPLE_ID" -p "$APP_SPECIFIC_PASSWORD"
        echo "✅ Authentication successful!"
    
    - name: Create simple Xcode project
      env:
        BUNDLE_ID: ${{ github.event.inputs.bundle_id }}
      run: |
        # Create directory first
        mkdir -p SimpleApp
        cd SimpleApp
        
        # Create project directory structure
        mkdir -p SimpleApp.xcodeproj
        
        # Create project.pbxproj
        cat > SimpleApp.xcodeproj/project.pbxproj << 'EOF'
        {
            archiveVersion = 1;
            classes = {};
            objectVersion = 50;
            objects = {
                1DFB2345246A272400B07214 = {
                    isa = PBXProject;
                    attributes = {
                        LastSwiftUpdateCheck = 1140;
                        LastUpgradeCheck = 1140;
                        TargetAttributes = {
                            1DFB234C246A272400B07214 = {
                                CreatedOnToolsVersion = 11.4;
                            };
                        };
                    };
                    buildConfigurationList = 1DFB2348246A272400B07214 = {
                        isa = XCConfigurationList;
                        buildConfigurations = (
                            1DFB234D246A272400B07214 = {
                                isa = XCBuildConfiguration;
                                buildSettings = {
                                    CODE_SIGN_STYLE = Automatic;
                                    PRODUCT_BUNDLE_IDENTIFIER = "$BUNDLE_ID";
                                    PRODUCT_NAME = SimpleApp;
                                };
                                name = Debug;
                            },
                        );
                        defaultConfigurationIsVisible = 0;
                        defaultConfigurationName = Release;
                    };
                    compatibilityVersion = "Xcode 3.2";
                    developmentRegion = en;
                    hasScannedForEncodings = 0;
                    knownRegions = ( en );
                    mainGroup = 1DFB2343246A272400B07214;
                    projectDirPath = "";
                    projectRoot = "";
                    targets = (
                        1DFB234C246A272400B07214 = {
                            isa = PBXNativeTarget;
                            buildConfigurationList = 1DFB234F246A272400B07214 = {
                                isa = XCConfigurationList;
                                buildConfigurations = (
                                    1DFB2350246A272400B07214 = {
                                        isa = XCBuildConfiguration;
                                        buildSettings = {
                                            CODE_SIGN_STYLE = Automatic;
                                            PRODUCT_BUNDLE_IDENTIFIER = "$BUNDLE_ID";
                                            PRODUCT_NAME = SimpleApp;
                                        };
                                        name = Debug;
                                    },
                                );
                                defaultConfigurationIsVisible = 0;
                                defaultConfigurationName = Release;
                            };
                            buildPhases = ( );
                            buildRules = ( );
                            dependencies = ( );
                            name = SimpleApp;
                            productName = SimpleApp;
                            productReference = 1DFB234D246A272400B07214 = {
                                isa = PBXFileReference;
                                explicitFileType = wrapper.application;
                                includeInIndex = 0;
                                path = SimpleApp.app;
                                sourceTree = BUILT_PRODUCTS_DIR;
                            };
                            productType = "com.apple.product-type.application";
                        },
                    );
                };
            };
            rootObject = 1DFB2345246A272400B07214;
        }
        EOF
        
        # Create Info.plist
        cat > Info.plist << 'EOF'
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
            <key>CFBundleDevelopmentRegion</key>
            <string>en</string>
            <key>CFBundleExecutable</key>
            <string>SimpleApp</string>
            <key>CFBundleIdentifier</key>
            <string>$BUNDLE_ID</string>
            <key>CFBundleInfoDictionaryVersion</key>
            <string>6.0</string>
            <key>CFBundleName</key>
            <string>SimpleApp</string>
            <key>CFBundlePackageType</key>
            <string>APPL</string>
            <key>CFBundleShortVersionString</key>
            <string>1.0</string>
            <key>CFBundleVersion</key>
            <string>1</string>
            <key>LSRequiresIPhoneOS</key>
            <true/>
        </dict>
        </plist>
        EOF
        
        echo "✅ Created Xcode project for bundle ID: $BUNDLE_ID"
        ls -la
    
    - name: Generate certificates and profiles
      env:
        APPLE_ID: ${{ secrets.APPLE_ID }}
        APP_SPECIFIC_PASSWORD: ${{ secrets.APP_SPECIFIC_PASSWORD }}
      run: |
        cd SimpleApp
        
        echo "🚀 Generating certificates and provisioning profiles..."
        
        # Create a scheme
        mkdir -p xcshareddata/xcschemes
        cat > xcshareddata/xcschemes/SimpleApp.xcscheme << 'EOF'
        <?xml version="1.0" encoding="UTF-8"?>
        <Scheme LastUpgradeVersion = "1140" version = "1.3">
          <BuildAction parallelizeBuildables = "YES" buildImplicitDependencies = "YES"></BuildAction>
          <TestAction buildConfiguration = "Debug" selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB" selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB" shouldUseLaunchSchemeArgsEnv = "YES"></TestAction>
          <LaunchAction buildConfiguration = "Debug" selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB" selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB" launchStyle = "0" useCustomWorkingDirectory = "NO" ignoresPersistentStateOnLaunch = "NO" debugDocumentVersioning = "YES" debugServiceExtension = "internal" allowLocationSimulation = "YES">
            <BuildableProductRunnable runnableDebuggingMode = "0">
              <BuildableReference BuildableIdentifier = "primary" BlueprintIdentifier = "1DFB234C246A272400B07214" BuildableName = "SimpleApp.app" BlueprintName = "SimpleApp" ReferencedContainer = "container:SimpleApp.xcodeproj"></BuildableReference>
            </BuildableProductRunnable>
          </LaunchAction>
          <ProfileAction buildConfiguration = "Debug" shouldUseLaunchSchemeArgsEnv = "YES" savedToolIdentifier = "" useCustomWorkingDirectory = "NO" debugDocumentVersioning = "YES"></ProfileAction>
          <AnalyzeAction buildConfiguration = "Debug"></AnalyzeAction>
          <ArchiveAction buildConfiguration = "Debug" revealArchiveInOrganizer = "YES"></ArchiveAction>
        </Scheme>
        EOF
        
        # This will trigger certificate and profile creation
        xcodebuild -project SimpleApp.xcodeproj \
          -scheme SimpleApp \
          -destination 'generic/platform=iOS' \
          -allowProvisioningUpdates \
          -allowProvisioningDeviceRegistration \
          -quiet 2>/dev/null || echo "✅ Certificate and profile generation completed"
    
    - name: Extract provisioning profiles
      run: |
        echo "📱 Searching for generated provisioning profiles..."
        
        if [ -d "$HOME/Library/MobileDevice/Provisioning Profiles" ]; then
          echo "=== Found Provisioning Profiles ==="
          ls -la "$HOME/Library/MobileDevice/Provisioning Profiles/" 2>/dev/null | head -10
          
          # Copy all provisioning profiles
          mkdir -p extracted_profiles
          cp "$HOME/Library/MobileDevice/Provisioning Profiles/"*.mobileprovision extracted_profiles/ 2>/dev/null || echo "No profiles to copy"
          
          PROFILE_COUNT=$(ls extracted_profiles/*.mobileprovision 2>/dev/null | wc -l | tr -d ' ')
          echo "✅ Copied $PROFILE_COUNT provisioning profiles"
        else
          echo "❌ No provisioning profiles directory found"
          mkdir -p extracted_profiles
        fi
    
    - name: Create certificate extraction guide
      run: |
        cat > HOW_TO_EXTRACT_CERTIFICATES.md << 'EOF'
        # Apple Developer Credentials - Extraction Guide
        
        ## What's included in this download:
        
        ### ✅ Provisioning Profiles
        - These are the actual .mobileprovision files generated by Apple
        - You can use them directly for code signing
        - Located in the 'extracted_profiles' folder
        
        ### 🔐 Certificate (Manual Extraction Required)
        - The Apple Development certificate has been generated on Apple's servers
        - You need to manually export it from Keychain Access on a Mac
        
        ## Steps to get your .p12 certificate:
        
        1. **Open Keychain Access** on any macOS machine
        2. **Search for "Apple Development"** in the login keychain
        3. **Find your certificate** (it should show your Apple ID: ${{ secrets.APPLE_ID }})
        4. **Right-click the certificate** and select "Export..."
        5. **Choose .p12 format** and set a password
        6. **Save the file** as 'developer_certificate.p12'
        
        ## Your project details:
        - Bundle ID: ${{ github.event.inputs.bundle_id }}
        - Apple ID: ${{ secrets.APPLE_ID }}
        
        ## Next steps:
        1. Use the provisioning profiles from this download
        2. Manually export the certificate as described above
        3. Use both files for code signing your IPA files
        EOF
        
        echo "Bundle ID: ${{ github.event.inputs.bundle_id }}" > project_info.txt
        echo "Apple ID: ${{ secrets.APPLE_ID }}" >> project_info.txt
        echo "P12 Password: [set when manually exporting]" >> project_info.txt
    
    - name: Package artifacts
      run: |
        # Create a simple README
        echo "Apple Developer Credentials Package" > README.txt
        echo "Generated: $(date)" >> README.txt
        echo "Bundle ID: ${{ github.event.inputs.bundle_id }}" >> README.txt
        
        # Package everything
        zip -r apple_credentials.zip \
          extracted_profiles/ \
          HOW_TO_EXTRACT_CERTIFICATES.md \
          project_info.txt \
          README.txt
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: apple-developer-credentials
        path: |
          apple_credentials.zip
          extracted_profiles/
          HOW_TO_EXTRACT_CERTIFICATES.md
          project_info.txt
          README.txt
